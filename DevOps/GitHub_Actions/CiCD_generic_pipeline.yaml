# Pipeline stages
stages:
  - build
  - test
  - analyze
  - scan
  - publish

# Define jobs for each stage
jobs:
  # Build the project
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
      - name: Build with Gradle
        run: ./gradlew build

  # Run unit tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
      - name: Test with Gradle
        run: ./gradlew test

  # Analyze code with SonarQube
  analyze:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
      - name: Analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          # SonarQube token
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          # SonarQube project key
          sonar-project-key: my-project-key
          # SonarQube server URL
          sonar-host-url: https://my-sonarqube-server.com
          # Gradle command to execute (including any additional arguments)
          gradle-command: ./gradlew sonarqube

  # Scan for vulnerabilities with Tenable Nessus
  scan:
    runs-on: ubuntu-latest
    needs: [analyze]
    steps:
      - name: Run Tenable Nessus scan
        env:
          NESSUS_URL: https://your-nessus-server.com
          NESSUS_ACCESS_KEY: ${{ secrets.NESSUS_ACCESS_KEY }}
          NESSUS_SECRET_KEY: ${{ secrets.NESSUS_SECRET_KEY }}
        run: |
          sudo apt-get update && sudo apt-get install -y curl
          curl -sSL https://raw.githubusercontent.com/tenable/nessus-cloud-sdk-python/master/scripts/get-nessuscli.py | sudo python
          sudo nessuscli --version
          sudo nessuscli policy list
          sudo nessuscli scan new --policy "Your Nessus Policy Name" --target "your.target.com"

  # Publish artifacts to Nexus repository
  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
      - name: Publish to Nexus repository
        run: ./gradlew publish
